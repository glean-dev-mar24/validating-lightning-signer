[package]
name = "vls-proxy"
license = "Apache-2.0"
version = "0.13.0"
authors = ["Devrandom <c1.devrandom@niftybox.net>", "Ken Sedgwick <ken@bonsai.com>"]
edition = "2021"
description = "A library for implementing a Lightning signer, which externalizes and secures cryptographic operations."
homepage = "https://gitlab.com/lightning-signer/docs/"
repository = "https://gitlab.com/lightning-signer/validating-lightning-signer"
rust-version = "1.74.0"
build = "build.rs"

[features]
default = ["grpc", "main", "debug"]
grpc = ["tokio", "tokio-stream", "tonic", "prost", "async-stream", "url", "backoff"]
main = ["clap", "ctrlc"]
log_pretty_print = ["vls-core/log_pretty_print", "vls-frontend/log_pretty_print", "vls-protocol-signer/log_pretty_print"]
debug = ["vls-core/debug", "vls-protocol-signer/debug"]
system-test = ["serde_json", "tempfile", "vls-core/test_utils"]
heapmon_requests = []
developer = ["vls-protocol/developer", "vls-protocol-signer/developer", "vls-protocol-client/developer"]
test_cli = []

[dependencies]
vls-common = { path = "../vls-common", version = "0.13.0" }
vls-core = { path = "../vls-core", version = "0.13.0", features = ["use_backtrace"] }
vls-protocol-signer = { path = "../vls-protocol-signer", version = "0.13.0" }
vls-protocol-client = { path = "../vls-protocol-client", version = "0.13.0" }
vls-protocol = { path = "../vls-protocol", version = "0.13.0" }
vls-frontend = { path = "../vls-frontend", version = "0.13.0" }
vls-persist = { path = "../vls-persist", version = "0.13.0", default-features = false, features = ["std", "kvv", "redb-kvv"] }
vlsd = { path = "../vlsd", version = "0.13.0" }
lightning-storage-server = { path = "../lightning-storage-server/lib", version = "0.4.0", default-features = false }
nix = { version = "0.29", features = ["net", "uio", "term"] }
serde_json = { version = "1.0", optional = true }
tempfile = { version = "3", optional = true }
log = "0.4"
clap = { workspace = true, optional = true, features = ["derive"] }
# match kv dep for now
tokio = { version = "1.27", features = ["macros", "rt-multi-thread"], optional = true }
tokio-stream = { version = "0.1", optional = true }
futures = { version = "0.3", default-features = false, features = ["alloc"] }
tonic = { workspace = true, optional = true, features = ["server", "codegen", "channel", "prost"] }
prost = { workspace = true, optional = true }
ctrlc = { version = "3.4.5", features = ["termination"], optional = true }
triggered = "0.1"
async-stream = { version = "0.3", optional = true }
anyhow = "1.0"
async-trait = "0.1"
url = { version = "2.3", optional = true }
hex = "0.4"
backoff = { version = "0.4", features = ["tokio"], optional = true }
lru = ">=0.11.0,<0.13.0"

[dependencies.txoo-bitcoind-client]
workspace = true

[dev-dependencies]
tempfile = "3"
vls-proxy = { path = ".", features = ["developer"] }
vls-core = { path = "../vls-core", version = "0.13.0", features = [
  "use_backtrace",
  "test_utils",
] }
assert_cmd = "2.0.16"
predicates = "3.1.3"

[lib]
name = "vls_proxy"
path = "src/lib.rs"

[[bin]]
# A drop-in replacement for hsmd, communicating to an embedded VLS over a serial port
# AKA cln:serial
name = "remote_hsmd_serial"
path = "src/serial_main.rs"
required-features = ["main"]

[[bin]]
# A replacement for hsmd, listening to vlsd2 over a gRPC protocol
# AKA cln:socket
name = "remote_hsmd_socket"
path = "src/socket_main.rs"
required-features = ["grpc", "main"]


[[bin]]
name = "decode-vls"
path = "src/decode-vls.rs"

[[test]]
name = "frontend_system_test"
path = "tests/frontend_system_test.rs"
required-features = ["system-test"]

[[test]]
name = "cloud_system_test"
path = "tests/cloud_system_test.rs"
required-features = ["system-test"]
