[package]
name = "vls-core"
license = "Apache-2.0"
version = "0.12.0"
authors = ["Devrandom <c1.devrandom@niftybox.net>", "Ken Sedgwick <ken@bonsai.com>"]
edition = "2021"
description = "A library for implementing a Lightning signer, which externalizes and secures cryptographic operations."
homepage = "https://gitlab.com/lightning-signer/docs/"
repository = "https://gitlab.com/lightning-signer/validating-lightning-signer"
readme = "../README.md"
rust-version = "1.66.0"

[features]

default = ["std", "env_logger", "debug", "use_backtrace"]

no-std = ["lightning/no-std", "lightning-invoice/no-std", "bitcoin/no-std", "core2/alloc", "txoo/no-std", "bitcoin-push-decoder/no-std", "serde_bolt/no-std"]
std = ["lightning/std", "lightning-invoice/std", "bitcoin/std", "bitcoin/rand", "serde_bolt/std", "txoo/std", "bitcoin-push-decoder/std", "serde_bolt/std", "tracing/std"]
secp-lowmemory = ["bitcoin/secp-lowmemory"]

# if you use tonic, this is convenient for auto-conversion of MySigner Status to tonic::Status
grpc = ["tonic"]

test_utils = ["use_backtrace", "lightning/_test_utils", "lightning/unsafe_revoked_tx_signing", "bitcoin/bitcoinconsensus", "txoo/test-utils", "serde_bolt/test_utils", "bitcoin/rand-std"]

debug = ["debug_enforcement_state", "debug_node_state"]

use_backtrace = ["backtrace"]

log_pretty_print = []

# trace state at debug level
debug_enforcement_state = []
debug_node_state = []

# issue #187
tracker_size_workaround = []

# issue #206, #339, #235
timeless_workaround = []

txoo-source = ["txoo/source"]

[lib]
name = "lightning_signer"
path = "src/lib.rs"

[dependencies]
vls-common = { path = "../vls-common" }
serde = { version = "1.0", default-features = false, features = ["alloc"] }
serde_derive = { version = "1.0" }
bitcoin-consensus-derive = { version = "0.1.0" }
serde_with = { version = "3.6", default-features = false, features = ["hex", "macros"] }
bolt-derive = { path = "../bolt-derive", version = "0.3.1" }
policy-derive = { path = "../policy-derive", version = "0.1.0" }

hex = { version = "0.4", default-features = false, features = ["alloc"] }

core2 = { version = "0.3.0", optional = true, default-features = false }

# Disable default enabled “std” feature
anyhow = { version = "1.0", default-features = false }

# Disable default enabled “use_std” feature
scopeguard = { version = "1.1.0", default-features = false }

# Don't use "std" feature
log = "0.4.14"
tracing = { version = "0.1.40", features = ["attributes", "log"], default-features = false }

env_logger = { version = "0.9", optional = true }
backtrace = { version = "0.3", optional = true }
tonic = { version = "0.9", optional = true, default-features = false }

# match hashbrown dependency version via lightning
# pin ahash - latest doesn't work with the current nightly compiler we use
hashbrown = "0.13.2"
ahash = { version = "=0.8.4", default-features = false }

itertools = { version = "0.10", default-features = false }

[dependencies.serde_bolt]
version = "0.4.1"
default-features = false

[dependencies.bitcoin-push-decoder]
version = "0.3"
default-features = false

[dependencies.txoo]
version = "0.8"
default-features = false

[dev-dependencies.txoo-bitcoind-client]
version = "0.8.1"
default-features = false
features = ["dummy-source"]

[dev-dependencies]
tokio = { version = "1.0", default-features = false, features = ["macros"] }
paste = "1.0"
# For logging in unit tests
test-log = "0.2.8"
tempfile = "3.10.1"

[dependencies.lightning]
version = "0.0.123"
default-features = false
features = ["grind_signatures", "unsafe_revoked_tx_signing"]

[dev-dependencies.lightning]
version = "0.0.123"
default-features = false
features = ["grind_signatures", "_test_utils", "unsafe_revoked_tx_signing"]

[dependencies.lightning-invoice]
version = "0.31.0"
default-features = false

[dependencies.bitcoin]
version = "0.30.2"
default-features = false
features = ["serde"]

[dev-dependencies.bitcoin]
version = "0.30.2"
default-features = false
features = ["serde", "bitcoinconsensus", "rand-std"]

# fake dependency to turn on the test_utils feature when testing
[dev-dependencies.vls-core]
features = ["test_utils"]
path = "."

[lints.rust]
unexpected_cfgs = { level = "warn", check-cfg = ['cfg(fuzzing)'] }
